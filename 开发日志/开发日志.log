2019.8.20
TODO
1.protobuf协议 服务器引用问题 ok
2.服务器收到的64位会有问题 long类型的问题

在封装的时候了解下
2.laya的byte ok
3.node.js的buffer ok
4.sokietio关闭心跳 ok

2019.8.21
1.服务器接收64位INT值 会有溢出 暂时先用string代替
2.nginx

2019.8.22
1.IO雏形完成50% ok
2.服务器接收64位INT值 会有溢出 暂时先用string代替
3.nginx

2019.8.23
1.Login写了一部分,message注册与处理需要再完善下 CL CG SS之间消息要分开定义  ok
2.服务器接收64位INT值 会有溢出 暂时先用string代替
3.nginx

2019.8.24
1.assert
2.服务器接收64位INT值 会有溢出 暂时先用string代替
3.nginx

2019.8.26
1.assert
2.服务器接收64位INT值 会有溢出 暂时先用string代替
3.nginx
4.mysql 连接池中的连接 可能会出现不够用的情况 看看之后需不需要搞个备用连接ok

2019.8.27
1.assert
2.服务器接收64位INT值 会有溢出 暂时先用string代替
3.nginx
4.db库需要提前建立，想想怎么设计,最好不要手写SQL,容易出错

2019.8.28
1.assert
2.服务器接收64位INT值 会有溢出 暂时先用string代替
3.nginx
4.db库需要提前建立，想想怎么设计,最好不要手写SQL,容易出错

2019.8.29
1.assert ok
2.服务器接收64位INT值 会有溢出 暂时先用string代替
3.nginx
4.db库需要提前建立，想想怎么设计,最好不要手写SQL,容易出错
5.服务器时间
6.DBLOG表每日重建 清除

2019.8.29
1.服务器接收64位INT值 会有溢出 暂时先用string代替
2.db库需要提前建立，想想怎么设计,最好不要手写SQL,容易出错
3.服务器时间
4.DBLOG表每日重建 清除 ok
5.服务器认证 客户端认证

2019.9.2
1.服务器接收64位INT值 会有溢出 暂时先用string代替
2.db库需要提前建立，想想怎么设计,最好不要手写SQL,容易出错 DB需要优化的有些多
3.服务器时间 服务器认证 客户端认证
4.try catch 处理 还需要优化

2019.9.5
1.服务器接收64位INT值 会有溢出 暂时先用string代替
2.db库需要提前建立，想想怎么设计,最好不要手写SQL,容易出错 DB需要优化的有些多
3.服务器时间 服务器认证 客户端认证
4.try catch 处理 还需要优化
5.消息生成客户端不需要生成服务器之间的消息

2019.9.6
1.服务器接收64位INT值 会有溢出 暂时先用string代替
2.db库需要提前建立，想想怎么设计,最好不要手写SQL,容易出错 DB需要优化的有些多
3.服务器时间 服务器认证 客户端认证
4.try catch 处理 还需要优化
5.消息生成客户端不需要生成服务器之间的消息
7.发送消息 消息头在函数内部填充  
8.服务器使用socket发送消息时 会发往当前服务器
9.发送客户端消息 客户端解析失败 原因未知